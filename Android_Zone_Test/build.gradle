apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['jniLibs']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        debug.setRoot('perform-types/debug')
        release.setRoot('perform-types/release')

    }
    defaultConfig {
        minSdkVersion 17
        // dex突破65535的限制
        multiDexEnabled true
        targetSdkVersion 27
        vectorDrawables.useSupportLibrary = true
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a' ,"x86","mips"
//            abiFilters  "x86_64"
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64', 'arm64-v8a'
        }
        resConfigs "zh"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
//    applicationVariants.all { variant ->
//        println variant.name
////        variant.dex.dependsOn processWithJavassist //在执行dx命令之前将代码打入到class中
//    }
}
task('processWithJavassist'){
    doLast {
        println "hei processWithJavassist"
    }

//    String classPath = file('build/intermediates/classes/debug')//项目编译class所在目录
//    dodola.patch.PatchClass.process(classPath, project(':hackdex').buildDir
//            .absolutePath + '/intermediates/classes/debug')//第二个参数是hackdex的class所在目录

}
//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}
dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
//    implementation (name: 'aromeextsdk-1.0.2.0', ext: 'aar'){
//    implementation (name: 'aromeextsdk-1.0.2.0', ext: 'aar'){
//        exclude group:'com.taotao.android',module:'utdid4all'
//    }

    implementation fileTree(include: '*.aar', dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.11"
    //官方库
    implementation 'org.jetbrains:annotations-java5:16.0.3'
    //androidX
    def lifecycle_version = '2.0.0-beta01'
    //    https://developer.android.com/topic/libraries/architecture/adding-components
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
//    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version" // use kapt for Kotlin
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0-beta01'
    implementation 'androidx.appcompat:appcompat:1.0.0'

    //Z系列
    implementation 'com.zone:zokhttp:1.1.2'
    implementation 'com.github.luhaoaimama1:ZAnimate:1.0.1'
    implementation 'com.github.luhaoaimama1:ZRefreshLayout:1.0.15'
    implementation project(':Android_Zone_Lib')
//    implementation 'com.github.luhaoaimama1:zone-sdk:1.1.10'
    implementation 'com.github.luhaoaimama1:ZView:1.0.36'
//    implementation'com.github.luhaoaimama1:ZAdapter3:1.0.94'
    implementation'com.github.luhaoaimama1:ZAdapter3KT:2.0.2'


    //图像处理相关
    implementation 'com.facebook.fresco:fresco:1.9.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'jp.wasabeef:blurry:2.0.0'

    //网络相关
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'org.greenrobot:eventbus:3.0.0'

    //内存泄漏
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'

    //butterknife
    implementation 'com.jakewharton:butterknife:10.0.0'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.tom_roush:pdfbox-android:1.8.10.1'

    api "io.reactivex:rxjava:1.2.5"
    api "io.reactivex:rxandroid:1.2.1"
    api 'com.jaeger.statusbarutil:library:1.5.1'

//    api 'com.tencent.tbs.tbssdk:sdk:43697'
//    implementation "org.permissionsdispatcher:permissionsdispatcher:4.6.0"
//    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.6.0"

    implementation 'com.android.support:design:28.0.0'
    def work_version = "2.1.0"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"
    // optional - Multiprocess support
//    implementation "androidx.work:work-multiprocess:$work_version"

//    implementation "com.github.skydoves:colorpickerview:2.2.3"
//    implementation('com.github.skydoves:colorpickerview:2.2.3', {
//        exclude group: 'androidx.lifecycle', module: 'lifecycle-runtime'
//        exclude group: 'androidx.appcompat', module: 'appcompat'
//    })

    implementation 'com.airbnb.android:lottie:3.4.4'
}


//Kotlin gradle.build ZipException because of duplicates
//https://discuss.kotlinlang.org/t/kotlin-gradle-build-zipexception-because-of-duplicates/2133/8
configurations {
    //排除module
    compile.exclude group: 'org.jetbrains', module: 'annotations'
    all {
        resolutionStrategy {
            eachDependency { DependencyResolveDetails details ->
//                println "zone=>${details.requested}"
                //把所有的zview 为1.0.36
                if (details.requested.name == 'ZView') {
                    details.useVersion '1.0.36'
                }

                if (details.requested.name == 'kotlin-stdlib') {
                    details.useVersion '1.3.40'
                }
            }
        }
        resolutionStrategy.dependencySubstitution {
            // 替换module为他的 换成依赖项目
            substitute module('com.github.luhaoaimama1:zone-sdk:1.1.10') with project(':Android_Zone_Lib')
            //依赖项目换成  module依赖
//            substitute project(':Android_Zone_Lib') with module('com.github.luhaoaimama1:zone-sdk:2.1.02')
            // 指定某一个版本替换成 另一个版本 ，原来没有的话就不支持 因为走的循环并不是这里改过的 而是之前的 所以这里无法生效
//            substitute module('com.github.luhaoaimama1:zone-sdk:2.1.02') with module('com.github.luhaoaimama1:zone-sdk:1.1.10')
        }

    }
}


afterEvaluate {
    println("afterEvaluate==>${this.name}")
    tasks.matching {
        it.name.contains('javaPreCompileDebug')
    }.each {
        println "find : task $it"
        it.dependsOn {
            println "javaPreCompileDebug dependsOn do  "
        }

        it.doFirst {
            println "javaPreCompileDebug task doFist============>?"
        }
        it.doLast {
            println "javaPreCompileDebug task doLast"
        }
    }
}
